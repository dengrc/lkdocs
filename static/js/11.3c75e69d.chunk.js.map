{"version":3,"sources":["../static/js/11.3c75e69d.chunk.js","docs/zh-cn/pc/md/queryscheme.md"],"names":["webpackJsonp","69","module","exports"],"mappings":"AAAAA,cAAc,KAERC,GACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/11.3c75e69d.chunk.js","sourcesContent":["webpackJsonp([11],{\n\n/***/ 69:\n/***/ (function(module, exports) {\n\nmodule.exports = \"# 多方案查询-配置\\r\\n\\r\\n## js 部分\\r\\n\\r\\n### 1. `billtype`\\r\\n   + 页面本身没有这个值的，需要用工具配置\\r\\n   + 页面 `billtype` 为动态值，页面重用的情况。配置 json `querySchemeTitles`\\r\\n\\r\\n### 2. `querySchemeTitles`\\r\\n   + 仅当页面 billtype 为动态值时, 参考页面 `desktop\\\\views\\\\report\\\\billhistory\\\\GetBill`\\r\\n\\r\\n### 3. `title`\\r\\n   + 默认查询方案的名称\\r\\n\\r\\n### 4. `excludeInputNames`\\r\\n   + 需要排除在查询方案之外的输入项名称数组。默认值 `[\\\"begindate\\\",\\\"enddate\\\", \\\"beginmodifydate\\\", \\\"endmodifydate\\\"]`\\r\\n\\r\\n### 5. `defaultQueryParams`\\r\\n   + 查询条件的默认值，一定要包含到每个 输入项 的值，特别是 search 控件的 searchMap 中的重要字段要覆盖到位。\\r\\n\\r\\n\\r\\n## html 添加控件\\r\\n\\r\\n### 展开按钮，下拉选择\\r\\n   + 放在 `.report-titlebar` 第一个子元素里面。参考已有页面\\r\\n\\r\\n```html\\r\\n<span class=\\\"v-query-scheme-switch flat-chevron-right query-scheme-hidden\\\" data-dojo-attach-event=\\\"onclick:onOpenQueryScheme\\\"></span>\\r\\n<select class=\\\"v-query-scheme-select query-scheme-hidden\\\" data-dojo-type=\\\"dijit/form/Select\\\" data-dojo-props=\\\"store:at(this,'querySchemeStore'),labelAttr:'label',value:at(this,'currentQueryScheme'),_focusChangeActive:true,onChange:lang.hitch(this,'onChangeQueryScheme')\\\"></select>\\r\\n```\\r\\n\\r\\n### 查询并保存 按钮\\r\\n   + 放在 `查询` 按钮之前\\r\\n\\r\\n```html\\r\\n<button data-dojo-props=\\\"label:'保存并查询',onClick:lang.hitch(this,'onSaveQuerySchemeClick'),onMouseDown:lang.hitch(this,'onSaveQuerySchemeMouseDown'),class:'btn-ok ',visible:at(this,'showQuerySchemeButton')\\\" data-dojo-type=\\\"dijit/form/Button\\\" data-dojo-mixins=\\\"desktop/widgets/VisibleMixin\\\"></button>\\r\\n```\\r\\n\\r\\n### 查询方案组件\\r\\n   + 放在 `</from>` 之后\\r\\n\\r\\n```html\\r\\n<v-query-scheme v-bind=\\\"$data\\\" v-if=\\\"visible\\\" @click-scheme=\\\"onClick\\\" @dblclick-scheme=\\\"onDblClick\\\" @change-scheme=\\\"onChange\\\" @add-scheme=\\\"onAdd\\\" @remove-scheme=\\\"onRemove\\\" @close=\\\"hide\\\" data-dojo-attach-point=\\\"queryscheme\\\"></v-query-scheme>\\r\\n```\\r\\n\\r\\n## html 输入项调整\\r\\n\\r\\n### 普通输入项\\r\\n   + `name` 属性值，与 `data-dojo-props` 中 `value` 指向值相同\\r\\n   + `defaultQueryParams` 配置对应默认值\\r\\n\\r\\n```html\\r\\n<input name=\\\"keywords\\\" class=\\\"\\\" type=\\\"search\\\" data-dojo-props=\\\"label:'筛选条件',value:at('rel:','keywords')\\\" data-dojo-type=\\\"dijit/form/TextBox\\\" data-dojo-mixins=\\\"desktop/widgets/ItemField\\\" placeholder=\\\"商品名称/货号/条码/规格/型号\\\">\\r\\n```\\r\\n\\r\\n### 复选框\\r\\n   + `name` 属性值，与 `data-dojo-props` 中 `checked` 指向值相同。\\r\\n   + `name` 属性值，与父节点 `widget/FormField` `name` 属性值相同\\r\\n   + `defaultQueryParams` 配置对应默认值\\r\\n```html\\r\\n<div name=\\\"ifred\\\" data-dojo-props=\\\"label:'显示红冲'\\\" data-dojo-type=\\\"widget/FormField\\\">\\r\\n    <input name=\\\"ifred\\\" type=\\\"checkbox\\\" value=\\\"\\\" data-dojo-props=\\\"checked:at('rel:','ifred'),onClick:lang.hitch(this,'toggleTreeState')\\\" data-dojo-type=\\\"dijit/form/CheckBox\\\">\\r\\n</div>\\r\\n```\\r\\n\\r\\n### search\\r\\n   + `name` 属性值，与 `data-dojo-props` 中 `value` 指向值相同\\r\\n   + `defaultQueryParams` 配置对应默认值, 包括 searchMap 映射字段。** “:” 右边的是需要配置的字段 **\\r\\n\\r\\n```html\\r\\n<input name=\\\"gfullname\\\" data-dojo-type=\\\"desktop/search/GoodsSearch\\\" data-dojo-props=\\\"label:'商品',contextData:g.at(this,'queryParams'),isAllowSelectParent:'true',selectionType:'multiple',searchMap:{'gid':'gid','tnode':'gnode','usedeal1':'usedeal1','usedeal2':'usedeal2','usedeal3':'usedeal3'},   noDealGoods: true,valueAttr:'fullname',useAdd:false,value:g.at('rel:','gfullname'),onResultChanged:lang.hitch(this,'_dealChange'),doDetailOk:lang.hitch(this, 'updateGoodsDetail')\\\" data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n```\\r\\n\\r\\n### 组合控件\\r\\n   + `name` 属性值，与其中一个子组件的 `name` 值相同\\r\\n   + `module-children-names` 属性值为子组件 `name` 值的集合\\r\\n\\r\\n![avatar](https://dengrc.github.io/lkdocs/image/pc/TIM截图20200213202256.png)\\r\\n\\r\\n```html\\r\\n<div name=\\\"costmoneyrange\\\" module-children-names=\\\"costmoneyrange,costmoney\\\" module-label-selecotr=\\\".field-label\\\" class=\\\"default-hidden\\\" data-dojo-type=\\\"desktop/widgets/GroupField\\\">\\r\\n    <label class=\\\"field-label\\\" data-for=\\\"1\\\">\\r\\n        <span>期末金额</span>\\r\\n    </label>\\r\\n    <select name=\\\"costmoneyrange\\\" data-before-for=\\\"1\\\" data-dojo-type=\\\"desktop/widgets/Select\\\" style=\\\"min-width:60px;width:60px\\\" data-dojo-props=\\\"store:this.range,labelAttr:'title',value:at('rel:','costmoneyrange')\\\"></select>\\r\\n    <input data-id=\\\"1\\\" type=\\\"search\\\" name=\\\"costmoney\\\" data-dojo-type=\\\"dijit/form/NumberTextBox\\\" data-dojo-props=\\\"invalidMessage:'请输入数字',value:at('rel:','costmoney'),printWidget: true,printFooter:false,label:'期末金额'\\\">\\r\\n</div>\\r\\n```\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/11.3c75e69d.chunk.js","module.exports = \"# 多方案查询-配置\\r\\n\\r\\n## js 部分\\r\\n\\r\\n### 1. `billtype`\\r\\n   + 页面本身没有这个值的，需要用工具配置\\r\\n   + 页面 `billtype` 为动态值，页面重用的情况。配置 json `querySchemeTitles`\\r\\n\\r\\n### 2. `querySchemeTitles`\\r\\n   + 仅当页面 billtype 为动态值时, 参考页面 `desktop\\\\views\\\\report\\\\billhistory\\\\GetBill`\\r\\n\\r\\n### 3. `title`\\r\\n   + 默认查询方案的名称\\r\\n\\r\\n### 4. `excludeInputNames`\\r\\n   + 需要排除在查询方案之外的输入项名称数组。默认值 `[\\\"begindate\\\",\\\"enddate\\\", \\\"beginmodifydate\\\", \\\"endmodifydate\\\"]`\\r\\n\\r\\n### 5. `defaultQueryParams`\\r\\n   + 查询条件的默认值，一定要包含到每个 输入项 的值，特别是 search 控件的 searchMap 中的重要字段要覆盖到位。\\r\\n\\r\\n\\r\\n## html 添加控件\\r\\n\\r\\n### 展开按钮，下拉选择\\r\\n   + 放在 `.report-titlebar` 第一个子元素里面。参考已有页面\\r\\n\\r\\n```html\\r\\n<span class=\\\"v-query-scheme-switch flat-chevron-right query-scheme-hidden\\\" data-dojo-attach-event=\\\"onclick:onOpenQueryScheme\\\"></span>\\r\\n<select class=\\\"v-query-scheme-select query-scheme-hidden\\\" data-dojo-type=\\\"dijit/form/Select\\\" data-dojo-props=\\\"store:at(this,'querySchemeStore'),labelAttr:'label',value:at(this,'currentQueryScheme'),_focusChangeActive:true,onChange:lang.hitch(this,'onChangeQueryScheme')\\\"></select>\\r\\n```\\r\\n\\r\\n### 查询并保存 按钮\\r\\n   + 放在 `查询` 按钮之前\\r\\n\\r\\n```html\\r\\n<button data-dojo-props=\\\"label:'保存并查询',onClick:lang.hitch(this,'onSaveQuerySchemeClick'),onMouseDown:lang.hitch(this,'onSaveQuerySchemeMouseDown'),class:'btn-ok ',visible:at(this,'showQuerySchemeButton')\\\" data-dojo-type=\\\"dijit/form/Button\\\" data-dojo-mixins=\\\"desktop/widgets/VisibleMixin\\\"></button>\\r\\n```\\r\\n\\r\\n### 查询方案组件\\r\\n   + 放在 `</from>` 之后\\r\\n\\r\\n```html\\r\\n<v-query-scheme v-bind=\\\"$data\\\" v-if=\\\"visible\\\" @click-scheme=\\\"onClick\\\" @dblclick-scheme=\\\"onDblClick\\\" @change-scheme=\\\"onChange\\\" @add-scheme=\\\"onAdd\\\" @remove-scheme=\\\"onRemove\\\" @close=\\\"hide\\\" data-dojo-attach-point=\\\"queryscheme\\\"></v-query-scheme>\\r\\n```\\r\\n\\r\\n## html 输入项调整\\r\\n\\r\\n### 普通输入项\\r\\n   + `name` 属性值，与 `data-dojo-props` 中 `value` 指向值相同\\r\\n   + `defaultQueryParams` 配置对应默认值\\r\\n\\r\\n```html\\r\\n<input name=\\\"keywords\\\" class=\\\"\\\" type=\\\"search\\\" data-dojo-props=\\\"label:'筛选条件',value:at('rel:','keywords')\\\" data-dojo-type=\\\"dijit/form/TextBox\\\" data-dojo-mixins=\\\"desktop/widgets/ItemField\\\" placeholder=\\\"商品名称/货号/条码/规格/型号\\\">\\r\\n```\\r\\n\\r\\n### 复选框\\r\\n   + `name` 属性值，与 `data-dojo-props` 中 `checked` 指向值相同。\\r\\n   + `name` 属性值，与父节点 `widget/FormField` `name` 属性值相同\\r\\n   + `defaultQueryParams` 配置对应默认值\\r\\n```html\\r\\n<div name=\\\"ifred\\\" data-dojo-props=\\\"label:'显示红冲'\\\" data-dojo-type=\\\"widget/FormField\\\">\\r\\n    <input name=\\\"ifred\\\" type=\\\"checkbox\\\" value=\\\"\\\" data-dojo-props=\\\"checked:at('rel:','ifred'),onClick:lang.hitch(this,'toggleTreeState')\\\" data-dojo-type=\\\"dijit/form/CheckBox\\\">\\r\\n</div>\\r\\n```\\r\\n\\r\\n### search\\r\\n   + `name` 属性值，与 `data-dojo-props` 中 `value` 指向值相同\\r\\n   + `defaultQueryParams` 配置对应默认值, 包括 searchMap 映射字段。** “:” 右边的是需要配置的字段 **\\r\\n\\r\\n```html\\r\\n<input name=\\\"gfullname\\\" data-dojo-type=\\\"desktop/search/GoodsSearch\\\" data-dojo-props=\\\"label:'商品',contextData:g.at(this,'queryParams'),isAllowSelectParent:'true',selectionType:'multiple',searchMap:{'gid':'gid','tnode':'gnode','usedeal1':'usedeal1','usedeal2':'usedeal2','usedeal3':'usedeal3'},   noDealGoods: true,valueAttr:'fullname',useAdd:false,value:g.at('rel:','gfullname'),onResultChanged:lang.hitch(this,'_dealChange'),doDetailOk:lang.hitch(this, 'updateGoodsDetail')\\\" data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n```\\r\\n\\r\\n### 组合控件\\r\\n   + `name` 属性值，与其中一个子组件的 `name` 值相同\\r\\n   + `module-children-names` 属性值为子组件 `name` 值的集合\\r\\n\\r\\n![avatar](https://dengrc.github.io/lkdocs/image/pc/TIM截图20200213202256.png)\\r\\n\\r\\n```html\\r\\n<div name=\\\"costmoneyrange\\\" module-children-names=\\\"costmoneyrange,costmoney\\\" module-label-selecotr=\\\".field-label\\\" class=\\\"default-hidden\\\" data-dojo-type=\\\"desktop/widgets/GroupField\\\">\\r\\n    <label class=\\\"field-label\\\" data-for=\\\"1\\\">\\r\\n        <span>期末金额</span>\\r\\n    </label>\\r\\n    <select name=\\\"costmoneyrange\\\" data-before-for=\\\"1\\\" data-dojo-type=\\\"desktop/widgets/Select\\\" style=\\\"min-width:60px;width:60px\\\" data-dojo-props=\\\"store:this.range,labelAttr:'title',value:at('rel:','costmoneyrange')\\\"></select>\\r\\n    <input data-id=\\\"1\\\" type=\\\"search\\\" name=\\\"costmoney\\\" data-dojo-type=\\\"dijit/form/NumberTextBox\\\" data-dojo-props=\\\"invalidMessage:'请输入数字',value:at('rel:','costmoney'),printWidget: true,printFooter:false,label:'期末金额'\\\">\\r\\n</div>\\r\\n```\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/pc/md/queryscheme.md\n// module id = 69\n// module chunks = 11"],"sourceRoot":""}