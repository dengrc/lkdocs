{"version":3,"sources":["../static/js/34.61e0d6d4.chunk.js","docs/zh-cn/dojo/md/data.binding.md"],"names":["webpackJsonp","46","module","exports"],"mappings":"AAAAA,cAAc,KAERC,GACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/34.61e0d6d4.chunk.js","sourcesContent":["webpackJsonp([34],{\n\n/***/ 46:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## [dojox/mvc/getStateful](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/getStateful.html)\\r\\n\\r\\n获取状态值 用于双向绑定\\r\\n\\r\\n```javascript\\r\\nvar stateful = getStateful({ name: \\\"\\\" , address: \\\"\\\" , age: \\\"\\\" });\\r\\n```\\r\\n\\r\\n修改值\\r\\n\\r\\n```javascript\\r\\nstateful.set(\\\"name\\\", \\\"123456\\\");\\r\\n//或\\r\\nstateful.set({name: \\\"123456\\\" ,address: \\\"abc\\\"});\\r\\n```\\r\\n**错误方式** 通过赋值方式 双向绑定会失效\\r\\n```javascript\\r\\nstateful.name = \\\"123456\\\";\\r\\n```\\r\\n\\r\\n\\r\\n## [dojox/mvc/getPlainValue](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/getPlainValue.html)\\r\\n\\r\\n获取原始值\\r\\n\\r\\n状态值会多一些装饰方法，提交数据时需要获取原始值\\r\\n\\r\\n```javascript\\r\\nvar plainValue = getPlainValue(stateful);\\r\\n```\\r\\n\\r\\n## [dojox/mvc/at](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/at.html)\\r\\n\\r\\n绑定属性\\r\\n\\r\\n* 指定对象\\r\\n\\r\\n```javascript\\r\\nat(this, \\\"props\\\")\\r\\n```\\r\\n\\r\\n* 指定引用\\r\\n\\r\\n`rel:` 向上查找组件的 `target` 值作为引用对象\\r\\n\\r\\n```javascript\\r\\nat(\\\"rel:\\\", \\\"props\\\")\\r\\n```\\r\\n\\r\\n* 单向输入\\r\\n\\r\\n```javascript\\r\\nat(\\\"rel:\\\", \\\"props\\\").direction(at.from)\\r\\n```\\r\\n\\r\\n* 单向输出\\r\\n\\r\\n```javascript\\r\\nat(\\\"rel:\\\", \\\"props\\\").direction(at.to)\\r\\n```\\r\\n\\r\\n* 格式化绑定\\r\\n\\r\\n```javascript\\r\\nat(\\\"rel:\\\", \\\"props\\\").transform({format:function(value){ return value.replace(/(\\\\d{3})(\\\\d{4})/, '$1 $2 ') },parse:function(value){ return parseInt(value) }})\\r\\n```\\r\\n\\r\\n## [dojox/mvc/Output](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/Output.html)\\r\\n\\r\\n展现数据\\r\\n\\r\\n```html\\r\\n<span data-dojo-type=\\\"dojox/mvc/Output\\\" data-dojo-props=\\\"value: at(model, 'balance')\\\"></span>\\r\\n```\\r\\n\\r\\n```html\\r\\n<span data-dojo-type=\\\"dojox/mvc/Output\\\" data-dojo-props=\\\"value: at(model, 'balance')\\\">\\r\\n    Your balance is: ${this.value}\\r\\n</span>\\r\\n```\\r\\n\\r\\n## [dojox/mvc/Repeat](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/Repeat.html)\\r\\n\\r\\n迭代绑定\\r\\n\\r\\n## [dojox/mvc/Group](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/Group.html)\\r\\n\\r\\n层级连接点\\r\\n\\r\\n```javascript\\r\\nthis.model.data.name\\r\\n```\\r\\n\\r\\n不使用 `dojox/mvc/Group` 如果 data 为 `undefined` 下面这种方式会报错\\r\\n\\r\\n```html\\r\\n<div data-dojo-type=\\\"dijit/form/TextBox\\\" data-dojo-props=\\\"value:at(this.model.data,'name')\\\"></div>\\r\\n```\\r\\n\\r\\n```html\\r\\n<div data-dojo-type=\\\"dojox/mvc/Group\\\" data-dojo-props=\\\"target: at(this, 'model')\\\">\\r\\n    <div data-dojo-type=\\\"dojox/mvc/Group\\\" data-dojo-props=\\\"target: at('rel:', 'data')\\\">\\r\\n        <div data-dojo-type=\\\"dijit/form/TextBox\\\" data-dojo-props=\\\"value:at('rel:','name')\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n```\\r\\n\\r\\n**示例代码**\\r\\n```html\\n﻿<div>\\r\\n    <script type=\\\"dojo/require\\\">\\r\\n        at: \\\"dojox/mvc/at\\\",\\r\\n        lang: \\\"dojo/_base/lang\\\"\\r\\n    </script>\\r\\n    <!-- Repeat 子级里面 this 指向 Repeat -->\\r\\n    <!-- 所有要添加 view:this 配置， 方便里面绑定事件 -->\\r\\n    <ul data-dojo-type=\\\"dojox/mvc/Repeat\\\" data-dojo-props=\\\"children: at(this, 'items'),exprchar:'#',view:this\\\">\\r\\n        <li data-dojo-type=\\\"dojox/mvc/Group\\\" data-dojo-props=\\\"target: at('rel:', '#{this.index}')\\\">\\r\\n            <div>#{this.index}</div>\\r\\n            插值表达式 显示\\r\\n            <div>#{this.children[this.index].name}</div>\\r\\n            output 显示\\r\\n            <div data-dojo-type=\\\"dojox/mvc/Output\\\" data-dojo-props=\\\"value:at('rel:','name')\\\"></div>\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\" data-dojo-props=\\\"value:at('rel:','name'),label:'双向绑定'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n            <!-- lang.hitch 参数里面必须要有 '#{this.index}' 否则会报错 -->\\r\\n            <Button data-dojo-type=\\\"dijit/form/Button\\\"\\r\\n                    data-dojo-props=\\\"onClick:lang.hitch(this.view,'onDelete',this.children,'#{this.index}')\\\">\\r\\n                删除\\r\\n            </Button>\\r\\n        </li>\\r\\n    </ul>\\r\\n\\r\\n    <Button data-dojo-type=\\\"dijit/form/Button\\\"\\r\\n            data-dojo-props=\\\"onClick:lang.hitch(this,'onAdd'),disabled:at(this.items,'length').direction(at.from).transform({format:function(value){return value>5}})\\\">\\r\\n        添加\\r\\n    </Button>\\r\\n\\r\\n    <div data-dojo-type=\\\"dojox/mvc/Group\\\" data-dojo-props=\\\"target: at(this, 'model')\\\">\\r\\n        <div>\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','name').direction(at.to),label:'输出'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','name').direction(at.from),label:'输入'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','name'),label:'双向绑定'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n        </div>\\r\\n        <div>\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','mobile').direction(at.to).transform({parse:function(value){return value.replace(/\\\\s/g, '')}}),label:'格式化输出'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','mobile').direction(at.from).transform({format:function(value){return value.replace(/(\\\\d{3})(\\\\d{4})/, '$1 $2 ')}}),label:'格式化输入'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','mobile').transform({format:function(value){return value.replace(/(\\\\d{3})(\\\\d{4})/, '$1 $2 ')},parse:function(value){return value.replace(/\\\\s/g, '')}}),label:'格式化双向绑定'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\n```\\r\\n\\r\\n```javascript\\n﻿define([\\r\\n    \\\"dojo/_base/declare\\\",\\r\\n    \\\"desktop/application/ViewBase\\\",\\r\\n    \\\"dojo/text!./MVVM.html\\\",\\r\\n    \\\"dojox/mvc/getStateful\\\",\\r\\n    \\\"dojox/mvc/getPlainValue\\\"\\r\\n], function (declare, ViewBase, templace, getStateful, getPlainValue) {\\r\\n    return declare([ViewBase], {\\r\\n        templateString: templace,\\r\\n        model: null,\\r\\n        items: null,\\r\\n        constructor: function () {\\r\\n            this.items = getStateful([\\r\\n                { name: \\\"123\\\" },\\r\\n                { name: \\\"456\\\" },\\r\\n                { name: \\\"789\\\" }\\r\\n            ]);\\r\\n            this.model = getStateful({ name: \\\"123\\\",mobile:\\\"\\\" });\\r\\n        },\\r\\n        onDelete: function (items, index) {\\r\\n            items.splice(parseInt(index), 1);\\r\\n        },\\r\\n        onAdd: function () {\\r\\n            this.items.push(getStateful({ name: \\\"\\\" }));\\r\\n        }\\r\\n    })\\r\\n});\\n```\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/34.61e0d6d4.chunk.js","module.exports = \"## [dojox/mvc/getStateful](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/getStateful.html)\\r\\n\\r\\n获取状态值 用于双向绑定\\r\\n\\r\\n```javascript\\r\\nvar stateful = getStateful({ name: \\\"\\\" , address: \\\"\\\" , age: \\\"\\\" });\\r\\n```\\r\\n\\r\\n修改值\\r\\n\\r\\n```javascript\\r\\nstateful.set(\\\"name\\\", \\\"123456\\\");\\r\\n//或\\r\\nstateful.set({name: \\\"123456\\\" ,address: \\\"abc\\\"});\\r\\n```\\r\\n**错误方式** 通过赋值方式 双向绑定会失效\\r\\n```javascript\\r\\nstateful.name = \\\"123456\\\";\\r\\n```\\r\\n\\r\\n\\r\\n## [dojox/mvc/getPlainValue](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/getPlainValue.html)\\r\\n\\r\\n获取原始值\\r\\n\\r\\n状态值会多一些装饰方法，提交数据时需要获取原始值\\r\\n\\r\\n```javascript\\r\\nvar plainValue = getPlainValue(stateful);\\r\\n```\\r\\n\\r\\n## [dojox/mvc/at](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/at.html)\\r\\n\\r\\n绑定属性\\r\\n\\r\\n* 指定对象\\r\\n\\r\\n```javascript\\r\\nat(this, \\\"props\\\")\\r\\n```\\r\\n\\r\\n* 指定引用\\r\\n\\r\\n`rel:` 向上查找组件的 `target` 值作为引用对象\\r\\n\\r\\n```javascript\\r\\nat(\\\"rel:\\\", \\\"props\\\")\\r\\n```\\r\\n\\r\\n* 单向输入\\r\\n\\r\\n```javascript\\r\\nat(\\\"rel:\\\", \\\"props\\\").direction(at.from)\\r\\n```\\r\\n\\r\\n* 单向输出\\r\\n\\r\\n```javascript\\r\\nat(\\\"rel:\\\", \\\"props\\\").direction(at.to)\\r\\n```\\r\\n\\r\\n* 格式化绑定\\r\\n\\r\\n```javascript\\r\\nat(\\\"rel:\\\", \\\"props\\\").transform({format:function(value){ return value.replace(/(\\\\d{3})(\\\\d{4})/, '$1 $2 ') },parse:function(value){ return parseInt(value) }})\\r\\n```\\r\\n\\r\\n## [dojox/mvc/Output](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/Output.html)\\r\\n\\r\\n展现数据\\r\\n\\r\\n```html\\r\\n<span data-dojo-type=\\\"dojox/mvc/Output\\\" data-dojo-props=\\\"value: at(model, 'balance')\\\"></span>\\r\\n```\\r\\n\\r\\n```html\\r\\n<span data-dojo-type=\\\"dojox/mvc/Output\\\" data-dojo-props=\\\"value: at(model, 'balance')\\\">\\r\\n    Your balance is: ${this.value}\\r\\n</span>\\r\\n```\\r\\n\\r\\n## [dojox/mvc/Repeat](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/Repeat.html)\\r\\n\\r\\n迭代绑定\\r\\n\\r\\n## [dojox/mvc/Group](https://dojotoolkit.org/reference-guide/1.10/dojox/mvc/Group.html)\\r\\n\\r\\n层级连接点\\r\\n\\r\\n```javascript\\r\\nthis.model.data.name\\r\\n```\\r\\n\\r\\n不使用 `dojox/mvc/Group` 如果 data 为 `undefined` 下面这种方式会报错\\r\\n\\r\\n```html\\r\\n<div data-dojo-type=\\\"dijit/form/TextBox\\\" data-dojo-props=\\\"value:at(this.model.data,'name')\\\"></div>\\r\\n```\\r\\n\\r\\n```html\\r\\n<div data-dojo-type=\\\"dojox/mvc/Group\\\" data-dojo-props=\\\"target: at(this, 'model')\\\">\\r\\n    <div data-dojo-type=\\\"dojox/mvc/Group\\\" data-dojo-props=\\\"target: at('rel:', 'data')\\\">\\r\\n        <div data-dojo-type=\\\"dijit/form/TextBox\\\" data-dojo-props=\\\"value:at('rel:','name')\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n```\\r\\n\\r\\n**示例代码**\\r\\n```html\\n﻿<div>\\r\\n    <script type=\\\"dojo/require\\\">\\r\\n        at: \\\"dojox/mvc/at\\\",\\r\\n        lang: \\\"dojo/_base/lang\\\"\\r\\n    </script>\\r\\n    <!-- Repeat 子级里面 this 指向 Repeat -->\\r\\n    <!-- 所有要添加 view:this 配置， 方便里面绑定事件 -->\\r\\n    <ul data-dojo-type=\\\"dojox/mvc/Repeat\\\" data-dojo-props=\\\"children: at(this, 'items'),exprchar:'#',view:this\\\">\\r\\n        <li data-dojo-type=\\\"dojox/mvc/Group\\\" data-dojo-props=\\\"target: at('rel:', '#{this.index}')\\\">\\r\\n            <div>#{this.index}</div>\\r\\n            插值表达式 显示\\r\\n            <div>#{this.children[this.index].name}</div>\\r\\n            output 显示\\r\\n            <div data-dojo-type=\\\"dojox/mvc/Output\\\" data-dojo-props=\\\"value:at('rel:','name')\\\"></div>\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\" data-dojo-props=\\\"value:at('rel:','name'),label:'双向绑定'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n            <!-- lang.hitch 参数里面必须要有 '#{this.index}' 否则会报错 -->\\r\\n            <Button data-dojo-type=\\\"dijit/form/Button\\\"\\r\\n                    data-dojo-props=\\\"onClick:lang.hitch(this.view,'onDelete',this.children,'#{this.index}')\\\">\\r\\n                删除\\r\\n            </Button>\\r\\n        </li>\\r\\n    </ul>\\r\\n\\r\\n    <Button data-dojo-type=\\\"dijit/form/Button\\\"\\r\\n            data-dojo-props=\\\"onClick:lang.hitch(this,'onAdd'),disabled:at(this.items,'length').direction(at.from).transform({format:function(value){return value>5}})\\\">\\r\\n        添加\\r\\n    </Button>\\r\\n\\r\\n    <div data-dojo-type=\\\"dojox/mvc/Group\\\" data-dojo-props=\\\"target: at(this, 'model')\\\">\\r\\n        <div>\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','name').direction(at.to),label:'输出'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','name').direction(at.from),label:'输入'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','name'),label:'双向绑定'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n        </div>\\r\\n        <div>\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','mobile').direction(at.to).transform({parse:function(value){return value.replace(/\\\\s/g, '')}}),label:'格式化输出'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','mobile').direction(at.from).transform({format:function(value){return value.replace(/(\\\\d{3})(\\\\d{4})/, '$1 $2 ')}}),label:'格式化输入'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n            <input data-dojo-type=\\\"dijit/form/TextBox\\\"\\r\\n                   data-dojo-props=\\\"value:at('rel:','mobile').transform({format:function(value){return value.replace(/(\\\\d{3})(\\\\d{4})/, '$1 $2 ')},parse:function(value){return value.replace(/\\\\s/g, '')}}),label:'格式化双向绑定'\\\"\\r\\n                   data-dojo-mixins=\\\"desktop/widgets/ItemField\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\n```\\r\\n\\r\\n```javascript\\n﻿define([\\r\\n    \\\"dojo/_base/declare\\\",\\r\\n    \\\"desktop/application/ViewBase\\\",\\r\\n    \\\"dojo/text!./MVVM.html\\\",\\r\\n    \\\"dojox/mvc/getStateful\\\",\\r\\n    \\\"dojox/mvc/getPlainValue\\\"\\r\\n], function (declare, ViewBase, templace, getStateful, getPlainValue) {\\r\\n    return declare([ViewBase], {\\r\\n        templateString: templace,\\r\\n        model: null,\\r\\n        items: null,\\r\\n        constructor: function () {\\r\\n            this.items = getStateful([\\r\\n                { name: \\\"123\\\" },\\r\\n                { name: \\\"456\\\" },\\r\\n                { name: \\\"789\\\" }\\r\\n            ]);\\r\\n            this.model = getStateful({ name: \\\"123\\\",mobile:\\\"\\\" });\\r\\n        },\\r\\n        onDelete: function (items, index) {\\r\\n            items.splice(parseInt(index), 1);\\r\\n        },\\r\\n        onAdd: function () {\\r\\n            this.items.push(getStateful({ name: \\\"\\\" }));\\r\\n        }\\r\\n    })\\r\\n});\\n```\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/dojo/md/data.binding.md\n// module id = 46\n// module chunks = 34"],"sourceRoot":""}