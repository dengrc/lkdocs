{"version":3,"sources":["../static/js/46.c7e0ae58.chunk.js","docs/zh-cn/dojo/md.source/base.md"],"names":["webpackJsonp","50","module","exports"],"mappings":"AAAAA,cAAc,KAERC,GACA,SAAUC,EAAQC,GCHxBD,EAAAC,QAAA","file":"static/js/46.c7e0ae58.chunk.js","sourcesContent":["webpackJsonp([46],{\n\n/***/ 50:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## [AMD 模块](https://github.com/amdjs/amdjs-api/wiki/AMD-(%E4%B8%AD%E6%96%87%E7%89%88))\\r\\n\\r\\n* 函数 `define`\\r\\n\\r\\n```javascript\\r\\ndefine(id?, dependencies?, factory)\\r\\n```\\r\\n\\r\\n------\\r\\n\\r\\n## 类 [dojo/_base/declare](https://dojotoolkit.org/reference-guide/1.10/dojo/_base/declare.html)\\r\\n\\r\\n### 定义类\\r\\n\\r\\n构造函数、属性 不是必须的\\r\\n\\r\\n```code/A.js\\r\\n```\\r\\n### 继承\\r\\n\\r\\n实例化时会自动先调用父类的构造函数\\r\\n\\r\\n调用父类同名方法的方式\\r\\n\\r\\n```javascript\\r\\nthis.inherited(arguments)\\r\\n```\\r\\n\\r\\n重写参数\\r\\n\\r\\n```javascript\\r\\nthis.inherited(arguments,[123])\\r\\n```\\r\\n\\r\\n[arguments](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments) `arguments.callee` 指当前函数。在 `declare` 定义类时，会把类中的所有函\\r\\n\\r\\n数名称赋值给函数的 `nom` 属性。\\r\\n\\r\\n当需要在局部函数中调用父类同名方法时，需要先把 `arguments` 存起来\\r\\n\\r\\n```javascript\\r\\nvar _this = this;\\r\\nvar args = arguments;\\r\\nsetTimeout(function() {\\r\\n  _this.inherited(args)\\r\\n}, 0);\\r\\n```\\r\\n\\r\\n完整示例代码\\r\\n\\r\\n```code/B.js\\r\\n```\\r\\n\\r\\n### 多继承\\r\\n\\r\\n实例化后构造函数执行顺序\\r\\n\\r\\n当前类 --> C --> B --> A\\r\\n\\r\\n```javascript\\r\\ndeclare([A,B,C],{\\r\\n\\r\\n})\\r\\n```\\r\\n\\r\\n------\\r\\n\\r\\n## 事件 [dojo/on](https://dojotoolkit.org/reference-guide/1.10/dojo/on.html)\\r\\n\\r\\n### 绑定事件\\r\\n\\r\\n**在组件内最好使用 组件的 `connect` 方法绑定事件**\\r\\n\\r\\n* 绑定浏览器事件\\r\\n\\r\\n```javascript\\r\\non(document, \\\"click\\\", function(e){\\r\\n\\r\\n})\\r\\n```\\r\\n\\r\\n* 绑定多个事件\\r\\n\\r\\n```javascript\\r\\non(document, \\\"click,keyup\\\", function(e){\\r\\n\\r\\n})\\r\\n```\\r\\n\\r\\n* 事件委托\\r\\n\\r\\n```javascript\\r\\non(document, \\\"button:click\\\", function(e){\\r\\n  //点击所有 button\\r\\n})\\r\\n```\\r\\n\\r\\n* 绑定自定义事件\\r\\n\\r\\n第二个参数可以是任意字符串\\r\\n\\r\\n```javascript\\r\\non(document, \\\"my-event\\\", function(e){\\r\\n  \\r\\n})\\r\\n```\\r\\n\\r\\n### 解除绑定\\r\\n\\r\\n```javascript\\r\\nvar clickListener = on(document, \\\"click\\\", function(e){\\r\\n\\r\\n});\\r\\n//解除绑定\\r\\nclickListener.remove();\\r\\n```\\r\\n\\r\\n### 发布事件\\r\\n\\r\\n```javascript\\r\\non.emit(document, \\\"my-event\\\", {\\r\\n  bubbles: true,\\r\\n  cancelable: true\\r\\n});\\r\\n```\\r\\n\\r\\n------\\r\\n\\r\\n## 异步处理\\r\\n\\r\\n### [dojo/_base/Deferred](https://dojotoolkit.org/reference-guide/1.10/dojo/_base/Deferred.html)\\r\\n\\r\\n```code/Deferred.js\\r\\n```\\r\\n\\r\\n### [dojo/promise/all](https://dojotoolkit.org/reference-guide/1.10/dojo/promise/all.html)\\r\\n\\r\\n多个异步任务完成，执行回调\\r\\n\\r\\n```code/promiseAll.js\\r\\n```\\r\\n\\r\\n------\\r\\n\\r\\n## 常用函数\\r\\n\\r\\n### [dojo/_base/lang](https://dojotoolkit.org/reference-guide/1.10/dojo/_base/lang.html)\\r\\n\\r\\n* 更改函数作用域\\r\\n\\r\\n```javascript\\r\\nlang.hitch(this, function() { })\\r\\n```\\r\\n或\\r\\n```javascript\\r\\nlang.hitch(this, \\\"onClick\\\")\\r\\n```\\r\\n\\r\\n* 对象混合\\r\\n\\r\\n```javascript\\r\\nlang.mixin({ a: 1, b: 2 }, {b: 3, c: 4 })\\r\\n```\\r\\n\\r\\n* 类型判断\\r\\n\\r\\n```javascript\\r\\nlang.isArray(obj)\\r\\nlang.isFunction(obj)\\r\\nlang.isObject(obj)\\r\\nlang.isString(obj)\\r\\n```\\r\\n\\r\\n### 去抖 dojo/debounce\\r\\n\\r\\n```javascript\\r\\n//停止输入后 500 毫秒执行\\r\\non(input, \\\"input\\\" ,debounce(function(e) {\\r\\n  \\r\\n}, 500)\\r\\n```\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/46.c7e0ae58.chunk.js","module.exports = \"## [AMD 模块](https://github.com/amdjs/amdjs-api/wiki/AMD-(%E4%B8%AD%E6%96%87%E7%89%88))\\r\\n\\r\\n* 函数 `define`\\r\\n\\r\\n```javascript\\r\\ndefine(id?, dependencies?, factory)\\r\\n```\\r\\n\\r\\n------\\r\\n\\r\\n## 类 [dojo/_base/declare](https://dojotoolkit.org/reference-guide/1.10/dojo/_base/declare.html)\\r\\n\\r\\n### 定义类\\r\\n\\r\\n构造函数、属性 不是必须的\\r\\n\\r\\n```code/A.js\\r\\n```\\r\\n### 继承\\r\\n\\r\\n实例化时会自动先调用父类的构造函数\\r\\n\\r\\n调用父类同名方法的方式\\r\\n\\r\\n```javascript\\r\\nthis.inherited(arguments)\\r\\n```\\r\\n\\r\\n重写参数\\r\\n\\r\\n```javascript\\r\\nthis.inherited(arguments,[123])\\r\\n```\\r\\n\\r\\n[arguments](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments) `arguments.callee` 指当前函数。在 `declare` 定义类时，会把类中的所有函\\r\\n\\r\\n数名称赋值给函数的 `nom` 属性。\\r\\n\\r\\n当需要在局部函数中调用父类同名方法时，需要先把 `arguments` 存起来\\r\\n\\r\\n```javascript\\r\\nvar _this = this;\\r\\nvar args = arguments;\\r\\nsetTimeout(function() {\\r\\n  _this.inherited(args)\\r\\n}, 0);\\r\\n```\\r\\n\\r\\n完整示例代码\\r\\n\\r\\n```code/B.js\\r\\n```\\r\\n\\r\\n### 多继承\\r\\n\\r\\n实例化后构造函数执行顺序\\r\\n\\r\\n当前类 --> C --> B --> A\\r\\n\\r\\n```javascript\\r\\ndeclare([A,B,C],{\\r\\n\\r\\n})\\r\\n```\\r\\n\\r\\n------\\r\\n\\r\\n## 事件 [dojo/on](https://dojotoolkit.org/reference-guide/1.10/dojo/on.html)\\r\\n\\r\\n### 绑定事件\\r\\n\\r\\n**在组件内最好使用 组件的 `connect` 方法绑定事件**\\r\\n\\r\\n* 绑定浏览器事件\\r\\n\\r\\n```javascript\\r\\non(document, \\\"click\\\", function(e){\\r\\n\\r\\n})\\r\\n```\\r\\n\\r\\n* 绑定多个事件\\r\\n\\r\\n```javascript\\r\\non(document, \\\"click,keyup\\\", function(e){\\r\\n\\r\\n})\\r\\n```\\r\\n\\r\\n* 事件委托\\r\\n\\r\\n```javascript\\r\\non(document, \\\"button:click\\\", function(e){\\r\\n  //点击所有 button\\r\\n})\\r\\n```\\r\\n\\r\\n* 绑定自定义事件\\r\\n\\r\\n第二个参数可以是任意字符串\\r\\n\\r\\n```javascript\\r\\non(document, \\\"my-event\\\", function(e){\\r\\n  \\r\\n})\\r\\n```\\r\\n\\r\\n### 解除绑定\\r\\n\\r\\n```javascript\\r\\nvar clickListener = on(document, \\\"click\\\", function(e){\\r\\n\\r\\n});\\r\\n//解除绑定\\r\\nclickListener.remove();\\r\\n```\\r\\n\\r\\n### 发布事件\\r\\n\\r\\n```javascript\\r\\non.emit(document, \\\"my-event\\\", {\\r\\n  bubbles: true,\\r\\n  cancelable: true\\r\\n});\\r\\n```\\r\\n\\r\\n------\\r\\n\\r\\n## 异步处理\\r\\n\\r\\n### [dojo/_base/Deferred](https://dojotoolkit.org/reference-guide/1.10/dojo/_base/Deferred.html)\\r\\n\\r\\n```code/Deferred.js\\r\\n```\\r\\n\\r\\n### [dojo/promise/all](https://dojotoolkit.org/reference-guide/1.10/dojo/promise/all.html)\\r\\n\\r\\n多个异步任务完成，执行回调\\r\\n\\r\\n```code/promiseAll.js\\r\\n```\\r\\n\\r\\n------\\r\\n\\r\\n## 常用函数\\r\\n\\r\\n### [dojo/_base/lang](https://dojotoolkit.org/reference-guide/1.10/dojo/_base/lang.html)\\r\\n\\r\\n* 更改函数作用域\\r\\n\\r\\n```javascript\\r\\nlang.hitch(this, function() { })\\r\\n```\\r\\n或\\r\\n```javascript\\r\\nlang.hitch(this, \\\"onClick\\\")\\r\\n```\\r\\n\\r\\n* 对象混合\\r\\n\\r\\n```javascript\\r\\nlang.mixin({ a: 1, b: 2 }, {b: 3, c: 4 })\\r\\n```\\r\\n\\r\\n* 类型判断\\r\\n\\r\\n```javascript\\r\\nlang.isArray(obj)\\r\\nlang.isFunction(obj)\\r\\nlang.isObject(obj)\\r\\nlang.isString(obj)\\r\\n```\\r\\n\\r\\n### 去抖 dojo/debounce\\r\\n\\r\\n```javascript\\r\\n//停止输入后 500 毫秒执行\\r\\non(input, \\\"input\\\" ,debounce(function(e) {\\r\\n  \\r\\n}, 500)\\r\\n```\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/dojo/md.source/base.md\n// module id = 50\n// module chunks = 46"],"sourceRoot":""}